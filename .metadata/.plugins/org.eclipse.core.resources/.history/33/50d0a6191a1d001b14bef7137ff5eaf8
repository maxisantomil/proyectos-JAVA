
import java.util.ArrayList;
import java.util.Collections;

public class Juego {
	
	final static int NUMEROBASE=0;
	private String nombreJuego;
	private Mazo mazo;
	private Jugador j1;
	private Jugador j2;
	private Jugador ganador;
	private ArrayList<Pocima>pocimas;
	private boolean conPocima;
	private int cantidadRondas; //preguntar por cantidad de rondas si està bien implementado
			public Juego(String nombre,Mazo cartas,Jugador jj1,Jugador jj2,int canRondas,boolean pocima) {
				nombreJuego=nombre;
				mazo=cartas;
				j1=jj1;
				j2=jj2;
				cantidadRondas=canRondas;
				conPocima=pocima;
				pocimas=new ArrayList<>();
			}
			
			public boolean isConPocima() {
				return conPocima;
			}

			public void setConPocima(boolean conPocima) {
				this.conPocima = conPocima;
			}

			public void jugar() {
				int i=0;
				ganador=j1;
				this.repartirCartas();
				while(i<cantidadRondas&&(j1.cantidadCartas()>NUMEROBASE)&&(j2.cantidadCartas()>NUMEROBASE)) {
					++i;
					System.out.println("---------RONDA "+i+" ----------");
						jugarRonda();
				}
				muestraDefinicionDelJuego();		
						
					
			}
			
			private void muestraDefinicionDelJuego() {
				if(j1.compareTo(j2)>0) {
					System.out.println("**********************************************");
					System.out.println("El ganador del Juego ha sido: "+ j1.getNombre());
				}
				else if(j1.compareTo(j2)<0) {
					System.out.println("El ganador del Juego ha sido: "+ j2.getNombre());
				}
				else System.out.println("El Juego ha sido un empate");
				
			}

			public void determinarGanador(String atributo) {
				Carta cartaJugador1=j1.sacarCarta();			
				Carta cartaJugador2=j2.sacarCarta();
				double valorComparacion=cartaJugador1.comparaCarta(cartaJugador2, atributo);
				System.out.println(valorComparacion);
				int valorAtributo1=cartaJugador1.getValorAtributoAComparar(atributo);
				int valorAtributo2=cartaJugador2.getValorAtributoAComparar(atributo);
				System.out.println("La carta de "+j1.getNombre()+" es "+ cartaJugador1.getPersonaje()+" con "+atributo+" "+valorAtributo1+this.MensajePocima(cartaJugador1,atributo));
				System.out.println("La carta de "+j2.getNombre()+" es "+ cartaJugador2.getPersonaje()+" con "+atributo+" "+valorAtributo2+this.MensajePocima(cartaJugador2,atributo));
				
				if(valorComparacion>0) {
					ganador=j1;
					j1.agregarCartaalMazo(cartaJugador2);
					j1.agregarCartaalMazo(cartaJugador1);
				}
				else if(valorComparacion<0){
					ganador=j2;
					j2.agregarCartaalMazo(cartaJugador2);
					j2.agregarCartaalMazo(cartaJugador1);
				}
				else {
					j1.agregarCartaalMazo(cartaJugador1);
					j2.agregarCartaalMazo(cartaJugador2);
				}
			}
			
			private String MensajePocima(Carta carta, String atributo) {
				if(carta.getPocima()!=null) {
					return ", se aplicó pócima "+carta.getPocima().getNombre()+" valor resultante "+
							carta.getPocima().modificarAtributo(carta.getAtributoCarta(atributo));
				}
				else return "";
			}


				
		
			
			public void jugarRonda() {
				String atributo=ganador.elegirAtributo();
				System.out.println("El jugador "+ganador.getNombre()+" elige el atributo "+atributo);
				determinarGanador(atributo);
				System.out.println("Gana la ronda: "+ganador.getNombre());
				System.out.println(j1.getNombre()+" posee ahora "+j1.cantidadCartas()+" cartas y "+j2.getNombre()+" posee ahora "+j2.cantidadCartas()+" cartas");
				}
			
			public void addPocima(Pocima p) {
				pocimas.add(p);
			}
			
			
			
			public String getNombreJuego() {
				return nombreJuego;
			}


			public void setNombreJuego(String nombreJuego) {
				this.nombreJuego = nombreJuego;
			}


			public Jugador getJ1() {
				return j1;
			}


			public void setJ1(Jugador j1) {
				this.j1 = j1;
			}


			public Jugador getJ2() {
				return j2;
			}


			public void setJ2(Jugador j2) {
				this.j2 = j2;
			}

			public void mezclarPocimas() {
				Collections.shuffle(pocimas);
				}

			public void repartirCartas(){
				mazo.mezclar();
				mezclarPocimas();
				if(conPocima) {
					for(int i=0;i<pocimas.size();i++) {
						mazo.dameMazo().get(i).setPocima(pocimas.get(i));
					}
					mazo.mezclar();
				}
					
				while(mazo.dameMazo().size()>0) {
					
					if(mazo.esImpar()){
						j1.agregarCartaalMazo(mazo.getCarta());
					}
					else	
						j2.agregarCartaalMazo(mazo.getCarta());
		
				}
				
			}
						
						
					

}

